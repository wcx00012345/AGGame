//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Script.Components.PosComponent scriptComponentsPos { get { return (Script.Components.PosComponent)GetComponent(GameComponentsLookup.ScriptComponentsPos); } }
    public bool hasScriptComponentsPos { get { return HasComponent(GameComponentsLookup.ScriptComponentsPos); } }

    public void AddScriptComponentsPos(UnityEngine.Vector2 newPos) {
        var index = GameComponentsLookup.ScriptComponentsPos;
        var component = (Script.Components.PosComponent)CreateComponent(index, typeof(Script.Components.PosComponent));
        component.Pos = newPos;
        AddComponent(index, component);
    }

    public void ReplaceScriptComponentsPos(UnityEngine.Vector2 newPos) {
        var index = GameComponentsLookup.ScriptComponentsPos;
        var component = (Script.Components.PosComponent)CreateComponent(index, typeof(Script.Components.PosComponent));
        component.Pos = newPos;
        ReplaceComponent(index, component);
    }

    public void RemoveScriptComponentsPos() {
        RemoveComponent(GameComponentsLookup.ScriptComponentsPos);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScriptComponentsPos;

    public static Entitas.IMatcher<GameEntity> ScriptComponentsPos {
        get {
            if (_matcherScriptComponentsPos == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScriptComponentsPos);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScriptComponentsPos = matcher;
            }

            return _matcherScriptComponentsPos;
        }
    }
}
