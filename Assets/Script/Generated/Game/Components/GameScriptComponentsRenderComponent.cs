//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Script.Components.RenderComponent scriptComponentsRender { get { return (Script.Components.RenderComponent)GetComponent(GameComponentsLookup.ScriptComponentsRender); } }
    public bool hasScriptComponentsRender { get { return HasComponent(GameComponentsLookup.ScriptComponentsRender); } }

    public void AddScriptComponentsRender(Script.RenderView newRender) {
        var index = GameComponentsLookup.ScriptComponentsRender;
        var component = (Script.Components.RenderComponent)CreateComponent(index, typeof(Script.Components.RenderComponent));
        component.Render = newRender;
        AddComponent(index, component);
    }

    public void ReplaceScriptComponentsRender(Script.RenderView newRender) {
        var index = GameComponentsLookup.ScriptComponentsRender;
        var component = (Script.Components.RenderComponent)CreateComponent(index, typeof(Script.Components.RenderComponent));
        component.Render = newRender;
        ReplaceComponent(index, component);
    }

    public void RemoveScriptComponentsRender() {
        RemoveComponent(GameComponentsLookup.ScriptComponentsRender);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScriptComponentsRender;

    public static Entitas.IMatcher<GameEntity> ScriptComponentsRender {
        get {
            if (_matcherScriptComponentsRender == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScriptComponentsRender);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScriptComponentsRender = matcher;
            }

            return _matcherScriptComponentsRender;
        }
    }
}
