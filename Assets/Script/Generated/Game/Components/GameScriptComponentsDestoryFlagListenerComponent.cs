//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ScriptComponentsDestoryFlagListenerComponent scriptComponentsDestoryFlagListener { get { return (ScriptComponentsDestoryFlagListenerComponent)GetComponent(GameComponentsLookup.ScriptComponentsDestoryFlagListener); } }
    public bool hasScriptComponentsDestoryFlagListener { get { return HasComponent(GameComponentsLookup.ScriptComponentsDestoryFlagListener); } }

    public void AddScriptComponentsDestoryFlagListener(System.Collections.Generic.List<IScriptComponentsDestoryFlagListener> newValue) {
        var index = GameComponentsLookup.ScriptComponentsDestoryFlagListener;
        var component = (ScriptComponentsDestoryFlagListenerComponent)CreateComponent(index, typeof(ScriptComponentsDestoryFlagListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceScriptComponentsDestoryFlagListener(System.Collections.Generic.List<IScriptComponentsDestoryFlagListener> newValue) {
        var index = GameComponentsLookup.ScriptComponentsDestoryFlagListener;
        var component = (ScriptComponentsDestoryFlagListenerComponent)CreateComponent(index, typeof(ScriptComponentsDestoryFlagListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveScriptComponentsDestoryFlagListener() {
        RemoveComponent(GameComponentsLookup.ScriptComponentsDestoryFlagListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherScriptComponentsDestoryFlagListener;

    public static Entitas.IMatcher<GameEntity> ScriptComponentsDestoryFlagListener {
        get {
            if (_matcherScriptComponentsDestoryFlagListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ScriptComponentsDestoryFlagListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherScriptComponentsDestoryFlagListener = matcher;
            }

            return _matcherScriptComponentsDestoryFlagListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddScriptComponentsDestoryFlagListener(IScriptComponentsDestoryFlagListener value) {
        var listeners = hasScriptComponentsDestoryFlagListener
            ? scriptComponentsDestoryFlagListener.value
            : new System.Collections.Generic.List<IScriptComponentsDestoryFlagListener>();
        listeners.Add(value);
        ReplaceScriptComponentsDestoryFlagListener(listeners);
    }

    public void RemoveScriptComponentsDestoryFlagListener(IScriptComponentsDestoryFlagListener value, bool removeComponentWhenEmpty = true) {
        var listeners = scriptComponentsDestoryFlagListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveScriptComponentsDestoryFlagListener();
        } else {
            ReplaceScriptComponentsDestoryFlagListener(listeners);
        }
    }
}
